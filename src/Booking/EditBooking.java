/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Booking;

import ORM.Booking;
import ORM.Client;
import ORM.Photographer;
import ORM.Service;
import ORM_Controller.Photographer_Controller;
import ORM_Controller.Service_Controller;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class EditBooking extends javax.swing.JFrame {

    /**
     * Creates new form addPhotoshoot_Frame
     */
    private Integer key, index;
    private ClientBookings aThis;
    private Booking b;
    private ArrayList<Photographer> primaryphotographers;
    private ArrayList<Photographer> assistant;
    private ArrayList<String> sitting_types;
    private ArrayList<String> event_types;
    private DefaultComboBoxModel st;
    private DefaultComboBoxModel et;
    private DefaultComboBoxModel pp_list;
    private DefaultComboBoxModel ap_list;
    private DefaultComboBoxModel services;

    public EditBooking(Booking _b, Integer _key, Integer _index, ClientBookings _aThis) {
        services = new DefaultComboBoxModel();
        sitting_types = new ArrayList<>();
        event_types = new ArrayList<>();
        pp_list = ap_list = new DefaultComboBoxModel();
        index = _index;
        aThis = _aThis;
        key = _key;
        b = _b;
        setTypes();
        initComponents();

        firstname_Input.setText(b.getCId().getCFirstname());
        lastName_Input.setText(b.getCId().getCLastname());
        emailAddress_Input.setText(b.getCId().getCEmailAd());
        contactNumber_Input.setText(b.getCId().getCContactNumber());
        other_Input.setText(b.getCId().getClientType());

    }

    private void setTypes() {
        ArrayList<Service> servicesoffered = new ArrayList<>(new Service_Controller().viewDistinctServices());
        services = new DefaultComboBoxModel(servicesoffered.toArray());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        clientInfo = new javax.swing.JPanel();
        name_Label1 = new javax.swing.JLabel();
        firstname_Input = new javax.swing.JTextField();
        contactNumber_Input = new javax.swing.JTextField();
        emailAddress_Label1 = new javax.swing.JLabel();
        emailAddress_Input = new javax.swing.JTextField();
        name_Label2 = new javax.swing.JLabel();
        lastName_Input = new javax.swing.JTextField();
        contactNumber_Label1 = new javax.swing.JLabel();
        clientType_Lable = new javax.swing.JLabel();
        other_Input = new javax.swing.JTextField();
        bookingInfo = new javax.swing.JPanel();
        choose_Panel = new javax.swing.JPanel();
        choose_Label = new javax.swing.JLabel();
        choose_Label3 = new javax.swing.JLabel();
        servicename_Combox = new javax.swing.JComboBox();
        choose_Label1 = new javax.swing.JLabel();
        eventtype_combobox = new javax.swing.JComboBox();
        choose_Label4 = new javax.swing.JLabel();
        location_input = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        time_Label = new javax.swing.JLabel();
        timeout = new javax.swing.JComboBox();
        choose_Label2 = new javax.swing.JLabel();
        choose_Label6 = new javax.swing.JLabel();
        choose_Label7 = new javax.swing.JLabel();
        choose_Label8 = new javax.swing.JLabel();
        timein = new javax.swing.JComboBox();
        PrimaryPhotographer = new javax.swing.JComboBox();
        AsstPhotographer = new javax.swing.JComboBox();
        time_Label1 = new javax.swing.JLabel();
        findphotographers = new javax.swing.JButton();
        selectPrimaryPhotographer = new javax.swing.JButton();
        selectAssistantPhotographer = new javax.swing.JButton();
        studio_radio = new javax.swing.JRadioButton();
        other_radio = new javax.swing.JRadioButton();
        Services = new javax.swing.JCheckBox();
        Start = new javax.swing.JCheckBox();
        Date = new javax.swing.JCheckBox();
        addPG_Buttons1 = new javax.swing.JPanel();
        cancelP_Button1 = new javax.swing.JButton();
        confirmP_Button1 = new javax.swing.JButton();
        bg_choicePane2 = new javax.swing.JLabel();

        buttonGroup1.add(other_radio);
        buttonGroup1.add(studio_radio);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Client Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ribbon", 0, 24), new java.awt.Color(255, 51, 255))); // NOI18N
        clientInfo.setOpaque(false);

        name_Label1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        name_Label1.setForeground(new java.awt.Color(0, 255, 204));
        name_Label1.setText("First Name");

        firstname_Input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        firstname_Input.setEnabled(false);
        firstname_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstname_InputActionPerformed(evt);
            }
        });

        contactNumber_Input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        contactNumber_Input.setEnabled(false);

        emailAddress_Label1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        emailAddress_Label1.setForeground(new java.awt.Color(0, 255, 204));
        emailAddress_Label1.setText("Email Address");

        emailAddress_Input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emailAddress_Input.setEnabled(false);

        name_Label2.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        name_Label2.setForeground(new java.awt.Color(0, 255, 204));
        name_Label2.setText("Last Name");

        lastName_Input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lastName_Input.setEnabled(false);
        lastName_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastName_InputActionPerformed(evt);
            }
        });

        contactNumber_Label1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        contactNumber_Label1.setForeground(new java.awt.Color(0, 255, 204));
        contactNumber_Label1.setText("Contact Number");

        clientType_Lable.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        clientType_Lable.setForeground(new java.awt.Color(0, 255, 204));
        clientType_Lable.setText("client type");

        other_Input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        other_Input.setEnabled(false);
        other_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other_InputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout clientInfoLayout = new javax.swing.GroupLayout(clientInfo);
        clientInfo.setLayout(clientInfoLayout);
        clientInfoLayout.setHorizontalGroup(
            clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(clientInfoLayout.createSequentialGroup()
                        .addComponent(name_Label1)
                        .addGap(18, 18, 18)
                        .addComponent(firstname_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, clientInfoLayout.createSequentialGroup()
                        .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contactNumber_Label1)
                            .addComponent(clientType_Lable, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(clientInfoLayout.createSequentialGroup()
                                .addComponent(other_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(contactNumber_Input))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientInfoLayout.createSequentialGroup()
                        .addComponent(name_Label2)
                        .addGap(18, 18, 18)
                        .addComponent(lastName_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientInfoLayout.createSequentialGroup()
                        .addComponent(emailAddress_Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailAddress_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        clientInfoLayout.setVerticalGroup(
            clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(name_Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstname_Input))
                    .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(name_Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastName_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactNumber_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactNumber_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailAddress_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailAddress_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientType_Lable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(other_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        MainPanel.add(clientInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 790, 160));

        bookingInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ribbon", 0, 24), new java.awt.Color(255, 102, 255))); // NOI18N
        bookingInfo.setOpaque(false);

        choose_Panel.setOpaque(false);
        choose_Panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        choose_Label.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        choose_Label.setForeground(new java.awt.Color(0, 255, 204));
        choose_Label.setText("What Kind of photoshoot should ");
        choose_Panel.add(choose_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 11, -1, 28));

        choose_Label3.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        choose_Label3.setForeground(new java.awt.Color(0, 255, 204));
        choose_Label3.setText("would you like us to cover?");
        choose_Panel.add(choose_Label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 41, 311, 28));

        servicename_Combox.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        servicename_Combox.setModel(services);
        servicename_Combox.setEnabled(false);
        servicename_Combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicename_ComboxActionPerformed(evt);
            }
        });
        choose_Panel.add(servicename_Combox, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 77, 164, -1));

        choose_Label1.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        choose_Label1.setForeground(new java.awt.Color(0, 255, 204));
        choose_Label1.setText("Type");
        choose_Panel.add(choose_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 75, -1, 28));

        eventtype_combobox.setFont(new java.awt.Font("Homestead Display", 0, 12)); // NOI18N
        eventtype_combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        eventtype_combobox.setEnabled(false);
        eventtype_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventtype_comboboxActionPerformed(evt);
            }
        });
        choose_Panel.add(eventtype_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 79, 164, -1));

        choose_Label4.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        choose_Label4.setForeground(new java.awt.Color(0, 255, 204));
        choose_Label4.setText("the photoshoot will take place in");
        choose_Panel.add(choose_Label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 103, 385, 28));

        location_input.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        location_input.setEnabled(false);
        choose_Panel.add(location_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 138, 174, -1));

        jComboBox1.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jComboBox1.setEnabled(false);
        choose_Panel.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(515, 104, -1, 28));

        jComboBox2.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32" }));
        jComboBox2.setEnabled(false);
        choose_Panel.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 104, -1, 28));

        jComboBox3.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        jComboBox3.setEnabled(false);
        choose_Panel.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(688, 104, -1, 28));

        time_Label.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        time_Label.setForeground(new java.awt.Color(255, 153, 51));
        time_Label.setText("time of photoshoot");
        choose_Panel.add(time_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 11, 216, 28));

        timeout.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        timeout.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        timeout.setEnabled(false);
        timeout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeoutActionPerformed(evt);
            }
        });
        choose_Panel.add(timeout, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 75, -1, 28));

        choose_Label2.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        choose_Label2.setForeground(new java.awt.Color(255, 51, 51));
        choose_Label2.setText("Asst Photographer:");
        choose_Panel.add(choose_Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 160, 20));

        choose_Label6.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        choose_Label6.setForeground(new java.awt.Color(255, 51, 51));
        choose_Label6.setText("Photographer:");
        choose_Panel.add(choose_Label6, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 184, 194, 28));

        choose_Label7.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        choose_Label7.setForeground(new java.awt.Color(255, 51, 51));
        choose_Label7.setText("START:");
        choose_Panel.add(choose_Label7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 38, 76, 28));

        choose_Label8.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        choose_Label8.setForeground(new java.awt.Color(255, 51, 51));
        choose_Label8.setText("END:");
        choose_Panel.add(choose_Label8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 75, 67, 28));

        timein.setFont(new java.awt.Font("Homestead Display", 0, 14)); // NOI18N
        timein.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        timein.setEnabled(false);
        timein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeinActionPerformed(evt);
            }
        });
        choose_Panel.add(timein, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 38, -1, 28));

        PrimaryPhotographer.setModel(pp_list);
        PrimaryPhotographer.setEnabled(false);
        PrimaryPhotographer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimaryPhotographerActionPerformed(evt);
            }
        });
        choose_Panel.add(PrimaryPhotographer, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 213, 273, -1));

        AsstPhotographer.setModel(ap_list);
        AsstPhotographer.setEnabled(false);
        AsstPhotographer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsstPhotographerActionPerformed(evt);
            }
        });
        choose_Panel.add(AsstPhotographer, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, 273, -1));

        time_Label1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        time_Label1.setForeground(new java.awt.Color(255, 153, 51));
        time_Label1.setText("DATE:");
        choose_Panel.add(time_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 103, -1, 28));

        findphotographers.setText("Find Photographers");
        findphotographers.setEnabled(false);
        findphotographers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findphotographersActionPerformed(evt);
            }
        });
        choose_Panel.add(findphotographers, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 144, -1, -1));

        selectPrimaryPhotographer.setText("Select");
        selectPrimaryPhotographer.setEnabled(false);
        selectPrimaryPhotographer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPrimaryPhotographerActionPerformed(evt);
            }
        });
        choose_Panel.add(selectPrimaryPhotographer, new org.netbeans.lib.awtextra.AbsoluteConstraints(685, 212, -1, -1));

        selectAssistantPhotographer.setText("Select");
        selectAssistantPhotographer.setEnabled(false);
        choose_Panel.add(selectAssistantPhotographer, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, -1, -1));

        studio_radio.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        studio_radio.setForeground(new java.awt.Color(255, 51, 51));
        studio_radio.setText("Studio");
        studio_radio.setContentAreaFilled(false);
        studio_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studio_radioActionPerformed(evt);
            }
        });
        choose_Panel.add(studio_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 142, -1, -1));

        other_radio.setFont(new java.awt.Font("Ribbon", 0, 14)); // NOI18N
        other_radio.setForeground(new java.awt.Color(255, 102, 102));
        other_radio.setText("Others");
        other_radio.setContentAreaFilled(false);
        other_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other_radioActionPerformed(evt);
            }
        });
        choose_Panel.add(other_radio, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 142, -1, -1));

        Services.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServicesActionPerformed(evt);
            }
        });
        choose_Panel.add(Services, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });
        choose_Panel.add(Start, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });
        choose_Panel.add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        javax.swing.GroupLayout bookingInfoLayout = new javax.swing.GroupLayout(bookingInfo);
        bookingInfo.setLayout(bookingInfoLayout);
        bookingInfoLayout.setHorizontalGroup(
            bookingInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(choose_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bookingInfoLayout.setVerticalGroup(
            bookingInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(choose_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.add(bookingInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 790, 350));

        addPG_Buttons1.setOpaque(false);

        cancelP_Button1.setBackground(new java.awt.Color(255, 255, 255));
        cancelP_Button1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        cancelP_Button1.setForeground(new java.awt.Color(255, 255, 102));
        cancelP_Button1.setText("Cancel");
        cancelP_Button1.setBorderPainted(false);
        cancelP_Button1.setContentAreaFilled(false);
        cancelP_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelP_Button1ActionPerformed(evt);
            }
        });

        confirmP_Button1.setFont(new java.awt.Font("Ribbon", 0, 18)); // NOI18N
        confirmP_Button1.setForeground(new java.awt.Color(255, 255, 102));
        confirmP_Button1.setText("Confirm");
        confirmP_Button1.setContentAreaFilled(false);
        confirmP_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmP_Button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPG_Buttons1Layout = new javax.swing.GroupLayout(addPG_Buttons1);
        addPG_Buttons1.setLayout(addPG_Buttons1Layout);
        addPG_Buttons1Layout.setHorizontalGroup(
            addPG_Buttons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPG_Buttons1Layout.createSequentialGroup()
                .addContainerGap(199, Short.MAX_VALUE)
                .addComponent(confirmP_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelP_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        addPG_Buttons1Layout.setVerticalGroup(
            addPG_Buttons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPG_Buttons1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPG_Buttons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelP_Button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(confirmP_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        MainPanel.add(addPG_Buttons1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, 470, -1));

        bg_choicePane2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sources/bg.png"))); // NOI18N
        MainPanel.add(bg_choicePane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 600));

        getContentPane().add(MainPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmP_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmP_Button1ActionPerformed
        // TODO add your handling code here:

        if (Date.isSelected()) {
            Integer year = Integer.valueOf(String.valueOf(jComboBox3.getSelectedItem()));
            Integer month = jComboBox1.getSelectedIndex();
            Integer day = Integer.valueOf(String.valueOf(jComboBox2.getSelectedItem()));

            Date r = new Date(year - 1900, month, day); // yy, mm , dd

            if (AsstPhotographer.isEnabled() && (PrimaryPhotographer.getSelectedIndex() == AsstPhotographer.getSelectedIndex())) {
                ImproperFillOutException();
                System.err.println("photgrapher == asst");
                return;
            } else {//set the booking
                if (AsstPhotographer.isEnabled()) {
                    b.setPId(primaryphotographers.get(PrimaryPhotographer.getSelectedIndex()));
                    System.out.println("pid: " + b.getPId());
                    b.setApId(primaryphotographers.get(AsstPhotographer.getSelectedIndex()));
                    System.out.println("Apid: " + b.getApId());
                } else {
                    b.setPId(primaryphotographers.get(PrimaryPhotographer.getSelectedIndex()));
                    System.out.println("pid: " + b.getPId());
                }
            }
            b.setSDate(r);
        }

        if (Services.isSelected()) {
            if (studio_radio.isSelected()) {
                b.setLocation("Studio");
            } else {
                b.setLocation(location_input.getText());
            }

            Service _result = new Service();
            ArrayList<Service> sss = new ArrayList<>(new Service_Controller().viewAllServices());
            for (Service tuple : sss) {// event and service name from the boxes
                if ((tuple.getEventType().equals(String.valueOf(eventtype_combobox.getSelectedItem()))
                        && tuple.getServiceName().equals(String.valueOf(servicename_Combox.getSelectedItem())))) {
                    b.setSId(tuple);
                    _result = tuple;
                    break;
                }
            }

        }

        b.setCId(b.getCId());

        if (Start.isSelected()) {

            Integer _timein = Integer.valueOf(String.valueOf(timein.getSelectedItem()));
            Integer _timeout = Integer.valueOf(String.valueOf(timeout.getSelectedItem()));

            if (_timein >= _timeout) {
                ImproperFillOutException();
                System.err.println("timein > timeout");
                return;
            } else {
                b.setTimeIn(_timein);
                b.setTimeOut(_timeout);
            }
        }

        if (b.getApId() == null && b.getPId() == null) {
            b.setIsArchived(true);
            JOptionPane.showMessageDialog(null, "immediate attention needed: no photographer");
        } else {
            b.setIsArchived(false);
        }
        b.save();
        JOptionPane.showMessageDialog(null, "Job Booked!");

        //BID
        int _year = b.getSDate().getYear() + 1900;

        aThis.model.setValueAt(b.getBId(), index, 0);
        aThis.model.setValueAt(b.getPId(), index, 1);
        aThis.model.setValueAt(b.getApId(), index, 2);
        aThis.model.setValueAt(b.getSId().getServiceName(), index, 3);
        aThis.model.setValueAt(b.getSId().getEventType(), index, 4);
        aThis.model.setValueAt(b.getSDate().getMonth() + "/" + b.getSDate().getDate() + "/" + _year, index, 5);
        aThis.model.setValueAt(b.getTimeIn(), index, 6);
        aThis.model.setValueAt(b.getTimeOut(), index, 7);
        aThis.model.setValueAt(b.getLocation(), index, 8);
        aThis.model.setValueAt(b.getIsArchived(), index, 9);


    }//GEN-LAST:event_confirmP_Button1ActionPerformed

    private void other_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_other_InputActionPerformed

    private void servicename_ComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicename_ComboxActionPerformed
        if (!servicename_Combox.getSelectedItem().equals("Sitting")) {
            studio_radio.setEnabled(false);
            //studio_radio.setSelected(false);
            other_radio.setSelected(true);
        } else {
            studio_radio.setEnabled(true);
        }

        ArrayList<Service> servicesoffered = new ArrayList<>(new Service_Controller().viewAllServices());
        //services = new DefaultComboBoxModel(servicesoffered.toArray());
        ArrayList<String> events = new ArrayList<>();
        for (Service tuple : servicesoffered) {
            if (tuple.getServiceName().equals(servicename_Combox.getSelectedItem())) {
                events.add(tuple.getEventType());
            }

        }
        et = new DefaultComboBoxModel(events.toArray());

        eventtype_combobox.setModel(et);
    }//GEN-LAST:event_servicename_ComboxActionPerformed

    private void eventtype_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventtype_comboboxActionPerformed

    }//GEN-LAST:event_eventtype_comboboxActionPerformed

    private void cancelP_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelP_Button1ActionPerformed
        this.dispose();
        //resetP_Button1ActionPerformed(null);
    }//GEN-LAST:event_cancelP_Button1ActionPerformed

    private void timeoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeoutActionPerformed
        if (Integer.valueOf(String.valueOf(timein.getSelectedItem())) > Integer.valueOf(String.valueOf(timeout.getSelectedItem()))) {
            JOptionPane.showMessageDialog(null, "Time End should be greater than Time Start");
            timeout.setSelectedIndex(0);
        }

    }//GEN-LAST:event_timeoutActionPerformed

    private void timeinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeinActionPerformed
        //oasdofijasdf
    }//GEN-LAST:event_timeinActionPerformed

    private void firstname_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstname_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstname_InputActionPerformed

    private void lastName_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastName_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastName_InputActionPerformed

    private void PrimaryPhotographerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimaryPhotographerActionPerformed
        // TODO add your handling code here:
        //ap_list.removeElement(PrimaryPhotographer.getSelectedItem());
    }//GEN-LAST:event_PrimaryPhotographerActionPerformed

    private void AsstPhotographerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsstPhotographerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AsstPhotographerActionPerformed

    private void findphotographersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findphotographersActionPerformed
        // TODO add your handling code here:
//        Date time_in = new Date(2015, 5, 27, starthour.getSelectedIndex(), startmin.getSelectedIndex());
//        Date time_out = new Date(2015, 5, 27, endhour.getSelectedIndex(), endmin.getSelectedIndex());
        Integer time_in = Integer.valueOf(String.valueOf(timein.getSelectedItem()));
        Integer time_out = Integer.valueOf(String.valueOf(timeout.getSelectedItem()));

        Integer year = Integer.valueOf(String.valueOf(jComboBox3.getSelectedItem()));
        Integer month = jComboBox1.getSelectedIndex();
        Integer day = Integer.valueOf(String.valueOf(jComboBox2.getSelectedItem()));

        Date r = new Date(year - 1900, month, day); // yy, mm , dd
        primaryphotographers = new ArrayList<>(new Photographer_Controller().findAvailablePhotographers(time_in, time_out, r));
        assistant = new ArrayList<>(new Photographer_Controller().findAvailablePhotographers(time_in, time_out, r));
        //primaryphotographers.add(0, null);

        pp_list = new DefaultComboBoxModel(primaryphotographers.toArray());
        ap_list = new DefaultComboBoxModel(primaryphotographers.toArray());

        //System.out.println(ar);
        PrimaryPhotographer.setModel(pp_list);
        AsstPhotographer.setModel(ap_list);

    }//GEN-LAST:event_findphotographersActionPerformed

    private void selectPrimaryPhotographerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPrimaryPhotographerActionPerformed
        // TODO add your handling code here:
        if (!servicename_Combox.getSelectedItem().equals("Sitting")) {
            AsstPhotographer.setEnabled(true);
            selectAssistantPhotographer.setEnabled(true);
        }
    }//GEN-LAST:event_selectPrimaryPhotographerActionPerformed

    private void studio_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studio_radioActionPerformed
        // TODO add your handling code here:
        location_input.setEnabled(false);

    }//GEN-LAST:event_studio_radioActionPerformed

    private void other_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other_radioActionPerformed
        // TODO add your handling code here:
        if (other_radio.isSelected()) {
            location_input.setEnabled(true);
        } else {
            location_input.setEnabled(false);
            location_input.setText("");
        }
    }//GEN-LAST:event_other_radioActionPerformed

    private void ServicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServicesActionPerformed
        // TODO add your handling code here:
        if (Services.isSelected()) {
            servicename_Combox.setEnabled(true);
            eventtype_combobox.setEnabled(true);
        } else {
            servicename_Combox.setEnabled(false);
            eventtype_combobox.setEnabled(false);
        }

    }//GEN-LAST:event_ServicesActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        // TODO add your handling code here:
        if (Start.isSelected()) {
            timein.setEnabled(true);
            timeout.setEnabled(true);
        } else {
            timein.setEnabled(false);
            timeout.setEnabled(false);
        }
    }//GEN-LAST:event_StartActionPerformed

    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed
        // TODO add your handling code here:
        if (Date.isSelected()) {
            jComboBox1.setEnabled(true);
            jComboBox2.setEnabled(true);
            jComboBox3.setEnabled(true);
            findphotographers.setEnabled(true);
            PrimaryPhotographer.setEnabled(true);
            AsstPhotographer.setEnabled(true);
            selectAssistantPhotographer.setEnabled(true);
            selectPrimaryPhotographer.setEnabled(true);
            servicename_ComboxActionPerformed(evt);
        } else {
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
            jComboBox3.setEnabled(false);
            findphotographers.setEnabled(false);
            selectAssistantPhotographer.setEnabled(false);
            selectPrimaryPhotographer.setEnabled(false);
            //servicename_ComboxActionPerformed(evt);
        }
    }//GEN-LAST:event_DateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AsstPhotographer;
    private javax.swing.JCheckBox Date;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JComboBox PrimaryPhotographer;
    private javax.swing.JCheckBox Services;
    private javax.swing.JCheckBox Start;
    private javax.swing.JPanel addPG_Buttons1;
    private javax.swing.JLabel bg_choicePane2;
    private javax.swing.JPanel bookingInfo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelP_Button1;
    private javax.swing.JLabel choose_Label;
    private javax.swing.JLabel choose_Label1;
    private javax.swing.JLabel choose_Label2;
    private javax.swing.JLabel choose_Label3;
    private javax.swing.JLabel choose_Label4;
    private javax.swing.JLabel choose_Label6;
    private javax.swing.JLabel choose_Label7;
    private javax.swing.JLabel choose_Label8;
    private javax.swing.JPanel choose_Panel;
    private javax.swing.JPanel clientInfo;
    private javax.swing.JLabel clientType_Lable;
    private javax.swing.JButton confirmP_Button1;
    private javax.swing.JTextField contactNumber_Input;
    private javax.swing.JLabel contactNumber_Label1;
    private javax.swing.JTextField emailAddress_Input;
    private javax.swing.JLabel emailAddress_Label1;
    private javax.swing.JComboBox eventtype_combobox;
    private javax.swing.JButton findphotographers;
    private javax.swing.JTextField firstname_Input;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JTextField lastName_Input;
    private javax.swing.JTextField location_input;
    private javax.swing.JLabel name_Label1;
    private javax.swing.JLabel name_Label2;
    private javax.swing.JTextField other_Input;
    private javax.swing.JRadioButton other_radio;
    private javax.swing.JButton selectAssistantPhotographer;
    private javax.swing.JButton selectPrimaryPhotographer;
    private javax.swing.JComboBox servicename_Combox;
    private javax.swing.JRadioButton studio_radio;
    private javax.swing.JLabel time_Label;
    private javax.swing.JLabel time_Label1;
    private javax.swing.JComboBox timein;
    private javax.swing.JComboBox timeout;
    // End of variables declaration//GEN-END:variables

    private void ImproperFillOutException() {
        JOptionPane.showMessageDialog(null, "Fill out the form properly");
    }
}
